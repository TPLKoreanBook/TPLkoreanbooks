[{"/Users/sejunpark/TPLkoreanbooks/client/src/index.js":"1","/Users/sejunpark/TPLkoreanbooks/client/src/App.js":"2","/Users/sejunpark/TPLkoreanbooks/client/src/components/BookList.js":"3","/Users/sejunpark/TPLkoreanbooks/client/src/components/Logo.js":"4","/Users/sejunpark/TPLkoreanbooks/client/src/components/Categories.js":"5","/Users/sejunpark/TPLkoreanbooks/client/src/components/Book.js":"6","/Users/sejunpark/TPLkoreanbooks/client/src/hooks/useAsync.js":"7"},{"size":254,"mtime":1653933481031,"results":"8","hashOfConfig":"9"},{"size":885,"mtime":1653933479015,"results":"10","hashOfConfig":"9"},{"size":5796,"mtime":1653933479015,"results":"11","hashOfConfig":"9"},{"size":185,"mtime":1653933481542,"results":"12","hashOfConfig":"9"},{"size":1007,"mtime":1653933481569,"results":"13","hashOfConfig":"9"},{"size":701,"mtime":1654057101005,"results":"14","hashOfConfig":"9"},{"size":950,"mtime":1653933481319,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17i4z22",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sejunpark/TPLkoreanbooks/client/src/index.js",[],[],"/Users/sejunpark/TPLkoreanbooks/client/src/App.js",["41"],[],"import { useState, useEffect } from 'react';\nimport BookList from './components/BookList.js';\nimport Categories from './components/Categories';\nimport Logo from './components/Logo';\n\n\nimport './App.css';\n\n\n\nfunction App() {\n  const [category, setCategory] = useState('all');\n\n  /////// From here ///////\n\n  // const [data, setData] = useState([{}]);\n\n  // useEffect(() => {\n  //   fetch(\"http://127.0.0.1:5000/category/청소년\").then(\n  //     res => res.json()\n  //   )\n  //     .then(data => {\n  //       setData(data)\n  //     });\n\n  // }, []);\n  // console.log(data);\n\n  /////// To here ///////////////\n  return (\n    <div>\n      <header>\n        <Logo />\n\n      </header>\n      <main>\n        <Categories onCategory={setCategory} />\n\n        <BookList\n          category={category}\n        />\n      </main>\n      <footer>\n\n      </footer>\n    </div>\n  )\n};\n\nexport default App;\n","/Users/sejunpark/TPLkoreanbooks/client/src/components/BookList.js",["42","43"],[],"import { useState, useEffect } from 'react';\nimport styles from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from '../hooks/useAsync'\nimport Book from './Book.js'\n\nasync function getBooks(category) {\n    // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n    const response = await axios.get(`http://127.0.0.1:5000/category/${category}`);\n    console.log(response);\n    return response.data;\n}\n\nconst BookList = ({ category }) => {\n\n    const [state] = useAsync(() => getBooks(category), [category],);\n    const { loading, data, error } = state;\n    const [visible, setVisible] = useState(6);\n    const [searchTerm, setSearchTerm] = useState('');\n\n\n    const showMoreBooks = () => {\n        setVisible((prev) => prev + 6)\n    }\n\n    const showLessBooks = () => {\n        setVisible((prev) => prev - 6)\n    }\n\n    const searchHandler = (e) => {\n        const userInput = e.target.value;\n        setSearchTerm(userInput)\n    }\n    // Error handling.\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error</div>\n    if (!data) return null\n\n    return (\n        <section className={styles['book-list']}>\n            <div>\n                <input className={styles['searchbar']} type=\"text\" placeholder='Search...' onChange={searchHandler} />\n                <h2 className={styles['category']}>{category === '' ? 'All' : category}</h2>\n                <ul className={styles['list-container']}>\n                    {/* Test filtering\n                    {/* Filtered by users' selected category */}\n                    {data\n                        // After being filtered by the user's selected category, It will be filtered by the user's search input.\n                        .filter((book) => {\n                            if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n                                return book;\n                            }\n                        }).slice(0, visible).map((book, index) => (\n                            <Book\n                                key={book.count}\n                                cover={book.cover}\n                                title={book.title}\n                                author={book.author}\n                                address={book.link}\n                            />\n                        ))}\n                </ul>\n                <button onClick={showMoreBooks}>Show More!</button>\n                <button onClick={showLessBooks}>Show Less!</button>\n            </div>\n        </section>\n    )\n};\n\n\nexport default BookList;\n\n\n\n\n\n\n// import { useState, useEffect } from 'react';\n// import styles from './BookList.module.css';\n// import axios from 'axios';\n// import useAsync from '../hooks/useAsync'\n// import Book from './Book.js'\n\n// async function getBooks() {\n//     // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n//     const response = await axios.get('tpl_json.json');\n//     return response.data.books[0];\n// }\n\n// const BookList = ({ category }) => {\n\n//     const [state] = useAsync(getBooks, [],);\n//     const { loading, data, error } = state;\n//     const [visible, setVisible] = useState(6);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         if (data && category !== '') {\n//             data.filter((book) => {\n//                 return book.category === category;\n//             })\n//         }\n//     }, [data, category])\n//     const showMoreBooks = () => {\n//         setVisible((prev) => prev + 6)\n//     }\n\n//     const showLessBooks = () => {\n//         setVisible((prev) => prev - 6)\n//     }\n\n//     const searchHandler = (e) => {\n//         const userInput = e.target.value;\n//         setSearchTerm(userInput)\n//     }\n//     // Error handling.\n//     if (loading) return <div>Loading...</div>\n//     if (error) return <div>Error</div>\n//     if (!data) return null\n\n//     return (\n//         <section className={styles['book-list']}>\n//             <div>\n//                 <input className={styles['searchbar']} type=\"text\" placeholder='Search...' onChange={searchHandler} />\n//                 <h2 className={styles['category']}>{category === '' ? 'All' : category}</h2>\n//                 <ul className={styles['list-container']}>\n//                     {/* Test filtering\n//                     {/* Filtered by users' selected category */}\n//                     {data.filter((book) => {\n//                         if (category === '' || category === 'All') return book;\n//                         else {\n//                             return book.category === category;\n//                         }\n//                     })\n//                         // After being filtered by the user's selected category, It will be filtered by the user's search input.\n//                         .filter((book) => {\n//                             if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n//                                 return book;\n//                             }\n//                         }).slice(0, visible).map((book, index) => (\n//                             <Book\n//                                 key={book.count_number}\n//                                 cover={book.cover}\n//                                 title={book.title}\n//                                 author={book.author}\n//                                 address={book.link}\n//                             />\n//                         ))}\n//                 </ul>\n//                 <button onClick={showMoreBooks}>Show More!</button>\n//                 <button onClick={showLessBooks}>Show Less!</button>\n//             </div>\n//         </section>\n//     )\n// };\n\n\n// export default BookList;","/Users/sejunpark/TPLkoreanbooks/client/src/components/Logo.js",["44"],[],"import React from 'react';\nimport style from './Logo.module.css';\n\nfunction Logo() {\n  return <div className={style['logo']}> \n    <img src=\"logo.png\"/>\n  </div>\n}\n\nexport default Logo;","/Users/sejunpark/TPLkoreanbooks/client/src/components/Categories.js",[],[],"/Users/sejunpark/TPLkoreanbooks/client/src/components/Book.js",["45"],[],"import React from 'react';\nimport styles from './Book.module.css';\n\n\nfunction Book({ cover, title, address, author }) {\n    return (\n        <li className={styles['book-container']}>\n            <div className={styles['img-container']}>\n                <img src={cover} alt=\"\" />\n            </div>\n            <h3 className={styles['booktitle']} >{title}</h3>\n            <h4>{author}</h4>\n            {/* <h4 className={styles['author']}>{author}</h4> */}\n            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis, nobis rerum repudiandae?</p>\n            <a href={address} target=\"_blank\" className={styles['link-btn']}>Link</a>\n        </li>\n    )\n}\n\nexport default Book;","/Users/sejunpark/TPLkoreanbooks/client/src/hooks/useAsync.js",[],["46","47"],{"ruleId":"48","severity":1,"message":"49","line":1,"column":20,"nodeType":"50","messageId":"51","endLine":1,"endColumn":29},{"ruleId":"48","severity":1,"message":"49","line":1,"column":20,"nodeType":"50","messageId":"51","endLine":1,"endColumn":29},{"ruleId":"52","severity":1,"message":"53","line":49,"column":40,"nodeType":"54","messageId":"55","endLine":49,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":6,"column":5,"nodeType":"58","endLine":6,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":15,"column":13,"nodeType":"58","messageId":"61","endLine":15,"endColumn":78,"fix":"62"},{"ruleId":"63","severity":1,"message":"64","line":48,"column":5,"nodeType":"50","endLine":48,"endColumn":9,"suppressions":"65"},{"ruleId":"63","severity":1,"message":"66","line":48,"column":5,"nodeType":"50","endLine":48,"endColumn":9,"suggestions":"67","suppressions":"68"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"69","text":"70"},"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.",["71"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["72"],["73"],[648,648]," rel=\"noreferrer\"",{"kind":"74","justification":"75"},{"desc":"76","fix":"77"},{"kind":"74","justification":"75"},"directive","","Update the dependencies array to be: [fetchData]",{"range":"78","text":"79"},[887,891],"[fetchData]"]