{"ast":null,"code":"var _jsxFileName = \"/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport style from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from '../hooks/useAsync';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getBooks(category) {\n  // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n  const response = await axios.get('tpl_json.json'); // if (category === '') {\n  //     console.log(category)\n  //     console.log(response.data.books[0])\n  //     return response.data.books[0];\n  // } else {\n  //     const filteredData = await response.data.books[0].filter((book) => book.category === category);\n  //     console.log(filteredData);\n  //     return filteredData\n  // }\n\n  return response.data.books[0];\n}\n\nconst BookList = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  console.log(category);\n  const [state] = useAsync(getBooks, []);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  const [visible, setVisible] = useState(5);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const showMoreBooks = () => {\n    setVisible(prev => prev + 5);\n  };\n\n  const showLessBooks = () => {\n    setVisible(prev => prev - 5);\n  };\n\n  const searchHandler = e => {\n    const userInput = e.target.value;\n    setSearchTerm(userInput);\n  }; // Error handling.\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style['book-list'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: style['list-container'],\n        children: data.filter(book => {\n          if (category !== '') return book.category === category;\n\n          if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n            return book;\n          }\n        }).slice(0, visible).map((book, index) =>\n        /*#__PURE__*/\n        // This part can be List component\n        _jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Title: \", book.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis facilis veritatis voluptatibus minima reprehenderit temporibus velit, impedit, numquam nemo modi recusandae atque quod mollitia culpa iusto voluptas, nobis rerum repudiandae?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, book.count_number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showMoreBooks,\n        children: \"Show More!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showLessBooks,\n        children: \"Show Less!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookList, \"XHk0IbD4fQPL8qgnJERh6xiC3V4=\", false, function () {\n  return [useAsync];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/components/BookList.js"],"names":["useState","style","axios","useAsync","getBooks","category","response","get","data","books","BookList","console","log","state","loading","error","visible","setVisible","searchTerm","setSearchTerm","showMoreBooks","prev","showLessBooks","searchHandler","e","userInput","target","value","filter","book","title","includes","substring","length","slice","map","index","img","count_number"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport style from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from '../hooks/useAsync'\n\nasync function getBooks(category) {\n    // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n    const response = await axios.get('tpl_json.json');\n    // if (category === '') {\n    //     console.log(category)\n    //     console.log(response.data.books[0])\n    //     return response.data.books[0];\n    // } else {\n\n    //     const filteredData = await response.data.books[0].filter((book) => book.category === category);\n    //     console.log(filteredData);\n    //     return filteredData\n    // }\n    return response.data.books[0];\n}\n\nconst BookList = ({ category }) => {\n    console.log(category)\n    const [state] = useAsync(getBooks, [],);\n    const { loading, data, error } = state;\n\n    const [visible, setVisible] = useState(5);\n    const [searchTerm, setSearchTerm] = useState('')\n    const showMoreBooks = () => {\n        setVisible((prev) => prev + 5)\n    }\n\n    const showLessBooks = () => {\n        setVisible((prev) => prev - 5)\n    }\n\n    const searchHandler = (e) => {\n        const userInput = e.target.value;\n        setSearchTerm(userInput)\n    }\n    // Error handling.\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error</div>\n    if (!data) return null\n\n    return (\n        <section className={style['book-list']}>\n            <div>\n                <input type=\"text\" placeholder='Search...' onChange={searchHandler} />\n                <ul className={style['list-container']}>\n                    {/* Test filtering */}\n                    {data.filter((book) => {\n                        if (category !== '') return book.category === category;\n                        if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n                            return book;\n                        }\n                    }).slice(0, visible).map((book, index) => (\n                        // This part can be List component\n                        <li key={book.count_number} >\n                            <h3>Title: {book.title}</h3>\n                            <div className={style.img}></div>\n                            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis facilis veritatis voluptatibus minima reprehenderit temporibus velit, impedit, numquam nemo modi recusandae atque quod mollitia culpa iusto voluptas, nobis rerum repudiandae?</p>\n                            <button>link</button>\n                        </li>\n                    ))}\n                </ul>\n                <button onClick={showMoreBooks}>Show More!</button>\n                <button onClick={showLessBooks}>Show Less!</button>\n            </div>\n        </section>\n    )\n};\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}