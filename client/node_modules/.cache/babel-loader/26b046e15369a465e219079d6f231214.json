{"ast":null,"code":"var _jsxFileName = \"/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios'; // import booksData from '../tpl_json.json'\n\nimport useAsync from '../hooks/useAsync';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getBooks() {\n  // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n  const response = await axios.get('tpl_json.json');\n  return response.data;\n}\n\nconst BookList = () => {\n  _s();\n\n  const [state, dispatch] = useAsync(getBooks, []);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 23\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.books[0].slice(0, 3).map((book, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Title: \", book.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Description: ???\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, book.count_number, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookList, \"SJ6Jjm5HhpuGl6Bsm+9KG1Xkh9Q=\", false, function () {\n  return [useAsync];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/components/BookList.js"],"names":["axios","useAsync","getBooks","response","get","data","BookList","state","dispatch","loading","error","books","slice","map","book","index","title","count_number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,eAAeC,QAAf,GAA0B;AACtB;AACA,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAV,CAAvB;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACH;;AAED,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACC,QAAD,EAAW,EAAX,CAAlC;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWJ,IAAAA,IAAX;AAAiBK,IAAAA;AAAjB,MAA2BH,KAAjC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACL,IAAL,EAAW,OAAO,IAAP;AAEX,sBACI;AAAA,cACKA,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,kBAC3B;AAAA,8BACI;AAAA,8BAAYD,IAAI,CAACE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAASF,IAAI,CAACG,YAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CApBD;;GAAMX,Q;UAEwBL,Q;;;KAFxBK,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\n// import booksData from '../tpl_json.json'\nimport useAsync from '../hooks/useAsync'\n\nasync function getBooks() {\n    // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n    const response = await axios.get('tpl_json.json');\n    return response.data;\n}\n\nconst BookList = () => {\n\n    const [state, dispatch] = useAsync(getBooks, []);\n    const { loading, data, error } = state;\n\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error</div>\n    if (!data) return null\n\n    return (\n        <ul>\n            {data.books[0].slice(0, 3).map((book, index) => (\n                <li key={book.count_number}>\n                    <h3>Title: {book.title}</h3>\n                    <p>Description: ???</p>\n                </li>\n\n            ))}\n        </ul>\n    )\n};\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}