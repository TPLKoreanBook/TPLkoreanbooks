{"ast":null,"code":"var _jsxFileName = \"/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport style from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from './hooks/useAsync';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getBooks(category) {\n  // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n  const response = await axios.get('tpl_json.json');\n\n  if (category === '') {\n    console.log(category);\n    console.log(response.data.books[0]);\n    return response.data.books[0];\n  } else {\n    const filteredData = await response.data.books[0].filter(book => book.category === category);\n    console.log(filteredData);\n    return filteredData;\n  } // return response.data;\n\n}\n\nconst BookList = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const [state] = useAsync(() => getBooks(category), [category]);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  const [visible, setVisible] = useState(5);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const showMoreBooks = () => {\n    setVisible(prev => prev + 5);\n  };\n\n  const showLessBooks = () => {\n    setVisible(prev => prev - 5);\n  };\n\n  const searchHandler = e => {\n    const userInput = e.target.value;\n    setSearchTerm(userInput);\n  }; // Error handling.\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: style['book-list'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: style['list-container'],\n        children: data.filter(book => {\n          if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n            return book;\n          }\n        }).slice(0, visible).map((book, index) =>\n        /*#__PURE__*/\n        // This part can be List component\n        _jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Title: \", book.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis facilis veritatis voluptatibus minima reprehenderit temporibus velit, impedit, numquam nemo modi recusandae atque quod mollitia culpa iusto voluptas, nobis rerum repudiandae?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, book.count_number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showMoreBooks,\n        children: \"Show More!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showLessBooks,\n        children: \"Show Less!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookList, \"XHk0IbD4fQPL8qgnJERh6xiC3V4=\", false, function () {\n  return [useAsync];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/components/BookList.js"],"names":["useState","style","axios","useAsync","getBooks","category","response","get","console","log","data","books","filteredData","filter","book","BookList","state","loading","error","visible","setVisible","searchTerm","setSearchTerm","showMoreBooks","prev","showLessBooks","searchHandler","e","userInput","target","value","title","includes","substring","length","slice","map","index","img","count_number"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport style from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from './hooks/useAsync';\n\nasync function getBooks(category) {\n    // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n    const response = await axios.get('tpl_json.json');\n    if (category === '') {\n        console.log(category)\n        console.log(response.data.books[0])\n        return response.data.books[0];\n    } else {\n\n        const filteredData = await response.data.books[0].filter((book) => book.category === category);\n        console.log(filteredData);\n        return filteredData\n    }\n    // return response.data;\n}\n\nconst BookList = ({ category }) => {\n\n    const [state] = useAsync(() => getBooks(category), [category],);\n    const { loading, data, error } = state;\n\n    const [visible, setVisible] = useState(5);\n    const [searchTerm, setSearchTerm] = useState('')\n    const showMoreBooks = () => {\n        setVisible((prev) => prev + 5)\n    }\n\n    const showLessBooks = () => {\n        setVisible((prev) => prev - 5)\n    }\n\n    const searchHandler = (e) => {\n        const userInput = e.target.value;\n        setSearchTerm(userInput)\n    }\n    // Error handling.\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error</div>\n    if (!data) return null\n\n    return (\n        <section className={style['book-list']}>\n            <div>\n                <input type=\"text\" placeholder='Search...' onChange={searchHandler} />\n                <ul className={style['list-container']}>\n                    {/* Test filtering */}\n                    {data.filter((book) => {\n                        if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n                            return book;\n                        }\n                    }).slice(0, visible).map((book, index) => (\n                        // This part can be List component\n                        <li key={book.count_number} >\n                            <h3>Title: {book.title}</h3>\n                            <div className={style.img}></div>\n                            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis facilis veritatis voluptatibus minima reprehenderit temporibus velit, impedit, numquam nemo modi recusandae atque quod mollitia culpa iusto voluptas, nobis rerum repudiandae?</p>\n                            <button>link</button>\n                        </li>\n                    ))}\n                </ul>\n                <button onClick={showMoreBooks}>Show More!</button>\n                <button onClick={showLessBooks}>Show Less!</button>\n            </div>\n        </section>\n    )\n};\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}