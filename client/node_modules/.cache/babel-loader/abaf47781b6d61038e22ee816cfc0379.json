{"ast":null,"code":"var _jsxFileName = \"/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport BookList from './components/BookList';\nimport axios from 'axios';\nimport useAsync from './hooks/useAsync';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getBooks() {\n  // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n  const response = await axios.get('tpl_json.json');\n  console.log(response.data['books']);\n  return response.data;\n}\n\nfunction App() {\n  _s();\n\n  const [state] = useAsync(getBooks, []);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(BookList, {\n          loading: loading,\n          data: data,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PnIFIy9t7jXXUc3s0HlfIoWHHdc=\", false, function () {\n  return [useAsync];\n});\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/src/App.js"],"names":["BookList","axios","useAsync","getBooks","response","get","console","log","data","App","state","loading","error"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,WAAP;;;AAGA,eAAeC,QAAf,GAA0B;AACxB;AACA,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAV,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAc,OAAd,CAAZ;AACA,SAAOJ,QAAQ,CAACI,IAAhB;AACD;;AAED,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,IAAUR,QAAQ,CAACC,QAAD,EAAW,EAAX,CAAxB;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWH,IAAAA,IAAX;AAAiBI,IAAAA;AAAjB,MAA2BF,KAAjC;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE;AAAA,+BAEE,QAAC,QAAD;AACE,UAAA,OAAO,EAAEC,OADX;AAEE,UAAA,IAAI,EAAEH,IAFR;AAGE,UAAA,KAAK,EAAEI;AAHT;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxBQH,G;UACSP,Q;;;KADTO,G;AAwBR;AAED,eAAeA,GAAf","sourcesContent":["import BookList from './components/BookList'\nimport axios from 'axios';\nimport useAsync from './hooks/useAsync';\nimport './App.css';\n\n\nasync function getBooks() {\n  // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n  const response = await axios.get('tpl_json.json');\n  console.log(response.data['books']);\n  return response.data;\n}\n\nfunction App() {\n  const [state] = useAsync(getBooks, []);\n  const { loading, data, error } = state;\n\n  return (\n    <div>\n      <header>\n        <h1>Hello</h1>\n      </header>\n      <main>\n        <section>\n\n          <BookList\n            loading={loading}\n            data={data}\n            error={error}\n          />\n        </section>\n      </main>\n      <footer>\n\n      </footer>\n    </div>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}