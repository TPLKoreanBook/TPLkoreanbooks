{"ast":null,"code":"var _jsxFileName = \"/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from '../hooks/useAsync';\nimport Book from './Book.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getBooks() {\n  // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n  const response = await axios.get('tpl_json.json');\n  return response.data.books[0];\n}\n\nconst BookList = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const [state] = useAsync(getBooks, []);\n  const {\n    loading,\n    data,\n    error\n  } = state;\n  const [visible, setVisible] = useState(6);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    if (data && category !== '') {\n      data.filter(book => {\n        return book.category === category;\n      });\n    }\n  }, [data, category]);\n\n  const showMoreBooks = () => {\n    setVisible(prev => prev + 6);\n  };\n\n  const showLessBooks = () => {\n    setVisible(prev => prev - 6);\n  };\n\n  const searchHandler = e => {\n    const userInput = e.target.value;\n    setSearchTerm(userInput);\n  }; // Error handling.\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles['book-list'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles['searchbar'],\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles['category'],\n        children: category === '' ? 'All' : category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles['list-container'],\n        children: data.filter(book => {\n          if (category === '' || category === 'All') return book;else {\n            return book.category === category;\n          }\n        }) // After being filtered by the user's selected category, It will be filtered by the user's search input.\n        .filter(book => {\n          if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n            return book;\n          }\n        }).slice(0, visible).map((book, index) => /*#__PURE__*/_jsxDEV(Book, {\n          cover: book.cover,\n          title: book.title,\n          author: book.author,\n          address: book.link\n        }, book.count_number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showMoreBooks,\n        children: \"Show More!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showLessBooks,\n        children: \"Show Less!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookList, \"XnTfdtIRL70SA0kJXCy2WRa3eaI=\", false, function () {\n  return [useAsync];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/seumgminshin/Desktop/portfolio/lib/TPLkoreanbooks/client/src/components/BookList.js"],"names":["useState","useEffect","styles","axios","useAsync","Book","getBooks","response","get","data","books","BookList","category","state","loading","error","visible","setVisible","searchTerm","setSearchTerm","filter","book","showMoreBooks","prev","showLessBooks","searchHandler","e","userInput","target","value","title","includes","substring","length","slice","map","index","cover","author","link","count_number"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from './BookList.module.css';\nimport axios from 'axios';\nimport useAsync from '../hooks/useAsync'\nimport Book from './Book.js'\n\nasync function getBooks() {\n    // Got it working by throwing my tpl_json.json file into the Public folder and calling it by:\n    const response = await axios.get('tpl_json.json');\n    return response.data.books[0];\n}\n\nconst BookList = ({ category }) => {\n\n    const [state] = useAsync(getBooks, [],);\n    const { loading, data, error } = state;\n    const [visible, setVisible] = useState(6);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        if (data && category !== '') {\n            data.filter((book) => {\n                return book.category === category;\n            })\n        }\n    }, [data, category])\n    const showMoreBooks = () => {\n        setVisible((prev) => prev + 6)\n    }\n\n    const showLessBooks = () => {\n        setVisible((prev) => prev - 6)\n    }\n\n    const searchHandler = (e) => {\n        const userInput = e.target.value;\n        setSearchTerm(userInput)\n    }\n    // Error handling.\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error</div>\n    if (!data) return null\n\n    return (\n        <section className={styles['book-list']}>\n            <div>\n                <input className={styles['searchbar']} type=\"text\" placeholder='Search...' onChange={searchHandler} />\n                <h2 className={styles['category']}>{category === '' ? 'All' : category}</h2>\n                <ul className={styles['list-container']}>\n                    {/* Test filtering\n                    {/* Filtered by users' selected category */}\n                    {data.filter((book) => {\n                        if (category === '' || category === 'All') return book;\n                        else {\n                            return book.category === category;\n                        }\n                    })\n                        // After being filtered by the user's selected category, It will be filtered by the user's search input.\n                        .filter((book) => {\n                            if (book.title.includes(searchTerm.substring(0, searchTerm.length))) {\n                                return book;\n                            }\n                        }).slice(0, visible).map((book, index) => (\n                            <Book\n                                key={book.count_number}\n                                cover={book.cover}\n                                title={book.title}\n                                author={book.author}\n                                address={book.link}\n                            />\n                        ))}\n                </ul>\n                <button onClick={showMoreBooks}>Show More!</button>\n                <button onClick={showLessBooks}>Show Less!</button>\n            </div>\n        </section>\n    )\n};\n\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}